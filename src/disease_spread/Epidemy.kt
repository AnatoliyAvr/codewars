package disease_spread


fun main() {
    println("Fixed Tests: Epidemic")
    var tm = 18
    var n = 432
    var s0 = 1004
    var i0 = 1
    var b = 0.00209
    var a = 0.51
    println(epidemic(tm, n, s0, i0, b, a)) // 420
    tm = 12
    n = 288
    s0 = 1007
    i0 = 2
    b = 0.00206
    a = 0.45
    println(epidemic(tm, n, s0, i0, b, a)) // 461
}

fun epidemic(tm: Int, n: Int, s0: Int, i0: Int, b: Double, a: Double): Int {
    val dt = tm.toDouble() / n.toDouble()

    var s = s0.toDouble()
    var i = i0.toDouble()
    var r = 0.0

    var maxi = i

    repeat(n) {
        val sNext = s - (dt * b * s * i)
        val iNext = i + (dt * ((b * s * i) - (a * i)))
        val rNext = r + (dt * i * a)

        s = sNext
        i = iNext
        r = rNext

        if (i > maxi) maxi = i
    }
    return maxi.toInt()
}

/*
В 1978 году Британский медицинский журнал сообщил о вспышке гриппа в британской школе-интернате.
Там было 1000 студентов. Вспышка началась с одного инфицированного студента.

Мы хотим изучить распространение болезни среди населения этой школы. Общее население можно разделить
на три группы: инфицированные (i), те, кто выздоровел (r), и те, кто все еще восприимчив (s) к заражению болезнью.

Мы будем изучать заболевание в течение трех дней. Одна модель распространения использует 3 дифференциальных уравнения:

    (1) s'(t) = -b * s(t) * i(t)
    (2) i'(t) =  b * s(t) * i(t) - a * i(t)
    (3) r'(t) =  a * i(t)

где s(t), i(t), r(t) - восприимчивые, инфицированные, выздоровевшие в момент времени t, а s'(t), i'(t), r'(t) -
соответствующие производные. b и a являются константами: b представляет количество контактов, которые могут
распространять болезнь, а a - часть инфицированных, которая выздоровеет.

Мы можем преобразовывать уравнения (1), (2), (3) в конечных разностях

    (I)    S[k+1] = S[k] - dt * b * S[k] * I[k]
    (II)   I[k+1] = I[k] + dt * (b * S[k] * I[k] - a * I[k])
    (III)  R[k+1] = R[k] + dt * I[k] *a

Интервал [0, tm] будет разделен на n небольших интервалов длиной dt = tm/n. Начальными условиями здесь
могут быть: S0 = 999, I0 = 1, R0 = 0 Независимо от S0 и I0, R0 (количество восстановленных в момент времени 0) всегда равно 0.

Функция epidemic вернет максимальное число зараженных в виде целого числа (усеките до целого числа результат max(I)).

Пример:
tm = 14 ;n = 336 ;s0 = 996 ;i0 = 2 ;b = 0.00206 ;a = 0.41
epidemic(tm, n, s0, i0, b, a) --> 483

Записи:
Отслеживая значения восприимчивых, инфицированных и выздоровевших, вы можете построить решения 3 дифференциальных уравнений. Смотрите пример ниже на графике.
*/